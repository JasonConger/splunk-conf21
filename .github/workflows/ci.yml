name: CI
on:
  push:
    branches:
      - main
  repository_dispatch:
  
jobs:

  lint:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - run: mkdir -p dist
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 package/bin --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 package/bin --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
          
  test-unit:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - run: mkdir -p dist
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Run unittests
        run: |
          python3 -m unittest discover tests/
          
  ucc-gen:
    name: Generate App Bundle
    needs: test-unit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - run: mkdir -p dist
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - run: ucc-gen --ta-version 0.0.1
      - run: |
          mkdir -p build
          tar cfvz build/splunk-conf.tgz -C output splunk-conf21/
      - uses: actions/upload-artifact@v2
        with:
          name: app_tgz
          path: build/splunk-conf.tgz

      - uses: actions/upload-artifact@v2
        with:
          name: ucc_out
          path: output/splunk-conf

  appinspect:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      - name: Run AppInspect
        uses: splunk/appinspect-cli-action@v1.1.0
        with:
          app_path: ./output/TA_Dropbox
          
      - name: Upload AppInspect Results
        uses: actions/upload-artifact@v2
        with:
          name: appinspect-results
          path: appinspect_result.json
  
  # Build the Splunk package and upload as an artifact
  build:
    needs: appinspect
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Package app with Splunk Packaging Toolkit (SLIM)
        id: slim
        uses: splunk/addonfactory-packaging-toolkit-action@v1.1.0
        with:
          source: ./output/TA_Dropbox
      
      - name: Upload SLIM package as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: splunkbase-package
          path: ${{ steps.slim.outputs.OUTPUT }}
  
  
  
